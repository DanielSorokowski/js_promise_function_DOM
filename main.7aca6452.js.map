{"version":3,"sources":["scripts/main.js"],"names":["waitFor","element","eventName","Promise","resolve","addEventListener","nodeName","id","printMessage","message","notificationMessage","document","createElement","classList","add","innerText","body","appendChild","module","exports"],"mappings":";AAAA,aAEA,SAASA,EAAQC,EAASC,GACjB,OAAA,IAAIC,QAAQ,SAACC,GAClBH,EAAQI,iBAAiBH,EAAW,WAClCE,EACYF,UAAAA,OAAAA,EACQD,8BAAAA,OAAAA,EAAQK,SAAiBL,UAAAA,OAAAA,EAAQM,GAFrD,UAQN,IAAMC,EAAe,SAACC,GACdC,IAAAA,EAAsBC,SAASC,cAAc,OAEnDF,EAAoBG,UAAUC,IAAI,WAClCJ,EAAoBK,UAAYN,EAChCE,SAASK,KAAKC,YAAYP,IAG5BQ,OAAOC,QAAU,CACfnB,QAAAA,EACAQ,aAAAA","file":"main.7aca6452.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nfunction waitFor(element, eventName) {\n  return new Promise((resolve) => {\n    element.addEventListener(eventName, () => {\n      resolve(\n        `It was ${eventName}\n        on the element: ${element.nodeName}, id: ${element.id}.`\n      );\n    });\n  });\n}\n\nconst printMessage = (message) => {\n  const notificationMessage = document.createElement('div');\n\n  notificationMessage.classList.add('message');\n  notificationMessage.innerText = message;\n  document.body.appendChild(notificationMessage);\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}